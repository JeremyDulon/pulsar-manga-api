security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: app_login
        admin:
            anonymous: lazy
            pattern: ^/admin
        api:
            pattern: ^/api
            stateless: true
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/login', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/admin', roles: ROLE_ADMIN }
        # Api routes
        - { path: '^/api', roles: [ROLE_USER, ROLE_ADMIN] }
        # Auth routes
        - { path: '^/api/user', roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] } # Register
        - { path: '^/api/user/(.*)/confirm$', roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] } # Register confirm
        - { path: '^/api/user/forgot-password', roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [PUT] } # Register forgot
